@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject ApplicationDbContext Context

<ul class="navbar-nav">

    @if (SignInManager.IsSignedIn(User))
    {
        var name = "";
        var id = UserManager.GetUserId(User);
        var executive = Context.TExecutives.Where(u => u.IdUser.Equals(id)).ToList();
        if (executive.Count.Equals(0))
        {
            name = "PDHN";
        }
        else
        {
            name = $"{executive[0].Name} {executive[0].LastName}";
        }

        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Executives" asp-controller="Executives" asp-action="Logout">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        @*<li class="nav-item">
                <a class="nav-link text-dark" asp-area="Executives" asp-page="/Account/Register">Register</a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>*@
    }
</ul>
